{"version":3,"sources":["features/currentTodoId.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","features/Selectors.ts","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["CurrentTodoIdActionType","FilterActionType","CURRENT_TODO_ID_ACTIONS_CREATOR","todoId","type","SetCurrentTodoId","payload","currentTodoIdReducer","todoIdState","action","TodosActionType","FILTER_ACTIONS_CREATOR","query","SetQuery","status","SetStatus","filterReducer","filterState","TODO_ACTIONS_CREATOR","todos","LoadTodos","todosReducer","todosState","rootReducer","combineReducers","currentTodoId","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","SELECTORS","state","todo","isMatchQuery","title","toLowerCase","includes","completed","find","id","Loader","className","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","dispatch","userId","useState","user","setUser","isUserLoading","setIsUserLoading","useEffect","getUser","userFromServer","finally","onClick","href","email","name","TodoList","filteredTodos","length","map","TodoFilter","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","App","isLoading","setIsLoading","Root","ReactDOM","render","document","getElementById"],"mappings":"6KAEYA,E,gEAAAA,K,sDAAAA,M,KASZ,ICRYC,EDeCC,EAPyB,SACpCC,GADoC,MAER,CAC5BC,KAAMJ,EAAwBK,iBAC9BC,QAASH,IAoBII,EAbc,WAGR,IAFnBC,EAEkB,uDAFW,KAC7BC,EACkB,uCAClB,OAAQA,EAAOL,OACRJ,EAAwBK,iBACpBI,EAAOH,QAGPE,G,iBC5BDP,K,4BAAAA,E,+BAAAA,M,KAeZ,ICfYS,EDyBCC,EAViB,SAACC,GAAD,MAAoC,CAChER,KAAMH,EAAiBY,SACvBP,QAASM,IAQED,EALkB,SAACG,GAAD,MAAsC,CACnEV,KAAMH,EAAiBc,UACvBT,QAASQ,IA8BIE,EAtBO,WAGF,IAFlBC,EAEiB,uDAFW,CAAEL,MAAO,GAAIE,OAAQ,OACjDL,EACiB,uCACjB,OAAQA,EAAOL,MACb,KAAKH,EAAiBY,SACpB,OAAO,2BACFI,GADL,IAEEL,MAAOH,EAAOH,UAGlB,KAAKL,EAAiBc,UACpB,OAAO,2BACFE,GADL,IAEEH,OAAQL,EAAOH,UAGnB,QACE,OAAOW,K,SChDDP,K,8BAAAA,M,KAQZ,IAKaQ,EALkB,SAACC,GAAD,MAAqC,CAClEf,KAAMM,EAAgBU,UACtBd,QAASa,IAoBIE,EAbM,WAGP,IAFZC,EAEW,uDAFU,GACrBb,EACW,uCACX,OAAQA,EAAOL,OACRM,EAAgBU,UACZX,EAAOH,QAGPgB,GCrBPC,EAAcC,0BAAgB,CAClCC,cAAelB,EACfmB,OAAQV,EACRG,MAAOE,IAIIM,EAAQC,sBACnBL,EACAM,8BACEC,0BAAgBC,O,cCfPC,G,YAAoCC,KACpCC,EAAkDC,ICwClDC,EAtCiB,SAACC,GAC7B,IAAQlB,EAAkBkB,EAAlBlB,MAAOO,EAAWW,EAAXX,OAEf,OAAOP,EAAMO,QAAO,SAACY,GACnB,IAAMC,EAAeD,EAClBE,MACAC,cACAC,SAAShB,EAAOd,MAAM6B,eAEzB,OAAQf,EAAOZ,QACb,IAAK,MACH,OAAOyB,EAET,IAAK,SACH,OAAOA,IAAiBD,EAAKK,UAE/B,IAAK,YACH,OAAOJ,GAAgBD,EAAKK,UAE9B,QACE,OAAO,OAkBFP,EAbe,SAACC,GAAD,OAA8BA,EAAMX,OAAOd,OAa1DwB,EAZe,SAACC,GAAD,OAA8BA,EAAMX,OAAOZ,QAY1DsB,EAViB,SAACC,GAAD,OAC5BA,EAAMZ,eASKW,EANY,SAACjC,GACxB,OAAO,SAACkC,GACN,OAAOA,EAAMlB,MAAMyB,MAAK,SAAAN,GAAI,OAAIA,EAAKO,KAAO1C,O,eCrCnC2C,EAAmB,kBAC9B,qBAAKC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCOnB,SAASC,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAAsB,WACjC,IAAMC,EAAW5B,IACXP,EAAgBS,EAAeE,GACrC,EAKIF,EAAeE,EAAsBX,IAJvCoB,EADF,EACEA,GACAL,EAFF,EAEEA,MACAG,EAHF,EAGEA,UACAkB,EAJF,EAIEA,OAGF,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0CF,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAUA,OARAC,qBAAU,WACRD,GAAiB,GDCE,SAACL,GAAD,OAAoBb,EAAG,iBAAiBa,ICC3DO,CAAQP,GACLN,MAAK,SAACc,GAAD,OAAoBL,EAAQK,MACjCC,SAAQ,kBAAMJ,GAAiB,QACjC,IAGD,sBAAKnB,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdkB,EACC,cAAC,EAAD,IAEA,sBAAKlB,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYF,KAIZ,wBACEzC,KAAK,SACL2C,UAAU,SACV,UAAQ,cACRwB,QAAS,kBAAMX,EACb1D,EAAoC,aAK1C,sBAAK6C,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SAA4CP,IAE5C,oBAAGO,UAAU,QAAQ,UAAQ,aAA7B,UACGJ,EACC,wBAAQI,UAAU,mBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAED,OACAgB,GACC,mBAAGS,KAAI,iBAAYT,EAAKU,OAAxB,SAAkCV,EAAKW,oBC5D1CC,EAAqB,WAChC,IAAMC,EAAgB1C,EAAeE,GAC/BX,EAAgBS,EAAeE,GAC/BwB,EAAW5B,IAEjB,OACE,qCACG4C,EAAcC,OAAS,EACtB,mBAAG9B,UAAU,0BAAb,iEAIA,wBAAOA,UAAU,+BAAjB,UACE,gCACE,+BACE,mCAEA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAIjB,uCACA,wCAIJ,gCACG6B,EAAcE,KAAI,SAAAxC,GAAI,OACrB,qBACE,UAAQ,OAERS,UAAWT,EAAKO,KAAOpB,EAAgB,4BAA8B,GAHvE,UAKE,oBAAIsB,UAAU,eAAd,SAA8BT,EAAKO,KACnC,oBAAIE,UAAU,eAAd,SACGT,EAAKK,WACJ,sBAAMI,UAAU,OAAO,UAAQ,gBAA/B,SAA+C,mBAAGA,UAAU,qBAIhE,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAS,mBAAcT,EAAKK,UAAY,UAAY,UAAvD,SACGL,EAAKE,UAIV,oBAAIO,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACV3C,KAAK,SACLmE,QAAS,kBAAMX,EAAS1D,EAAoCoC,EAAKO,MAJnE,SAME,sBAAME,UAAU,OAAhB,SACE,mBAAGA,UAAS,oBAAeT,EAAKO,KAAOpB,EAAgB,SAAW,cAxBnEa,EAAKO,YAiCnBpB,GAAiB,cAAC,EAAD,QClEXsD,EAAuB,WAClC,IAAMnE,EAAQsB,EAAeE,GACvBtB,EAASoB,EAAeE,GACxBwB,EAAW5B,IAEjB,OACE,uBACEe,UAAU,mBACViC,SAAU,SAAAC,GAAK,OAAIA,EAAMC,kBAF3B,UAIE,mBAAGnC,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRoC,MAAOrE,EACPsE,SAAU,SAACH,GAAD,OAAWrB,EACnBjD,EAAiCsE,EAAMI,OAAOF,SAJlD,UAOE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,8BAKN,oBAAGpC,UAAU,qDAAb,UACE,uBACE,UAAQ,cACR3C,KAAK,OACL2C,UAAU,QACVuC,YAAY,YACZH,MAAOvE,EACPwE,SAAU,SAACH,GAAD,OAAWrB,EACnBjD,EAAgCsE,EAAMI,OAAOF,WAGjD,sBAAMpC,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdnC,EAAMiE,OAAS,GACd,sBAAM9B,UAAU,gBAAgBwC,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRpF,KAAK,SACL2C,UAAU,SACVwB,QAAS,kBAAMX,EAASjD,EAAgC,iBC1CzD8E,EAAgB,WAC3B,MAAkC3B,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBC,EAAlB,KAEM/B,EAAW5B,IAUjB,OARAmC,qBAAU,WACRwB,GAAa,GJGa3C,EAAY,UIAnCO,MAAK,SAACpC,GAAD,OAAWyC,EAAS1C,EAA0BC,OACnDmD,SAAQ,kBAAMqB,GAAa,QAC7B,IAGD,mCACE,qBAAK5C,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,MAGF,qBAAKA,UAAU,QAAf,SACG2C,EACC,cAAC,EAAD,IAEA,cAAC,EAAD,gBC/BVE,EAAO,kBACX,cAAC,IAAD,CAAUjE,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,SAKNkE,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,W","file":"static/js/main.f9316492.chunk.js","sourcesContent":["import { Action } from '../types/Action';\n\nexport enum CurrentTodoIdActionType {\n  SetCurrentTodoId = 'currentTodoId/set_current_todo_id',\n}\nexport type CurrentTodoId = number | null;\n\ntype SetCurrentTodoIdAction = (\n  Action<CurrentTodoIdActionType.SetCurrentTodoId, CurrentTodoId>\n);\n\nconst setCurrentTodoIdActionCreator = (\n  todoId: CurrentTodoId,\n): SetCurrentTodoIdAction => ({\n  type: CurrentTodoIdActionType.SetCurrentTodoId,\n  payload: todoId,\n});\n\nexport const CURRENT_TODO_ID_ACTIONS_CREATOR = {\n  set: setCurrentTodoIdActionCreator,\n};\n\nconst currentTodoIdReducer = (\n  todoIdState: CurrentTodoId = null,\n  action: SetCurrentTodoIdAction,\n): CurrentTodoId => {\n  switch (action.type) {\n    case CurrentTodoIdActionType.SetCurrentTodoId:\n      return action.payload;\n\n    default:\n      return todoIdState;\n  }\n};\n\nexport default currentTodoIdReducer;\n","import { Action } from '../types/Action';\nimport { Status } from '../types/Status';\n\nexport enum FilterActionType {\n  SetQuery = 'filter/set_query',\n  SetStatus = 'filter/set_status',\n}\n\ntype SetQueryAction = Action<FilterActionType.SetQuery, string>;\ntype SetStatusAction = Action<FilterActionType.SetStatus, Status>;\n\ntype FilterActions = SetQueryAction | SetStatusAction;\n\nexport interface FileterState {\n  query: string,\n  status: Status,\n}\n\nconst setQueryActionCreator = (query: string): SetQueryAction => ({\n  type: FilterActionType.SetQuery,\n  payload: query,\n});\n\nconst setStatusActionCreator = (status: Status): SetStatusAction => ({\n  type: FilterActionType.SetStatus,\n  payload: status,\n});\n\nexport const FILTER_ACTIONS_CREATOR = {\n  setQuery: setQueryActionCreator,\n  setStatus: setStatusActionCreator,\n};\n\nconst filterReducer = (\n  filterState: FileterState = { query: '', status: 'all' },\n  action: FilterActions,\n): FileterState => {\n  switch (action.type) {\n    case FilterActionType.SetQuery:\n      return {\n        ...filterState,\n        query: action.payload,\n      };\n\n    case FilterActionType.SetStatus:\n      return {\n        ...filterState,\n        status: action.payload,\n      };\n\n    default:\n      return filterState;\n  }\n};\n\nexport default filterReducer;\n","import { Action } from '../types/Action';\nimport { Todo } from '../types/Todo';\n\nexport enum TodosActionType {\n  LoadTodos = 'todos/load_todos',\n}\n\ntype LoadTodosAction = Action<TodosActionType.LoadTodos, Todo[]>;\n\ntype TodosActions = LoadTodosAction;\n\nconst loadTodosActionCreator = (todos: Todo[]): LoadTodosAction => ({\n  type: TodosActionType.LoadTodos,\n  payload: todos,\n});\n\nexport const TODO_ACTIONS_CREATOR = {\n  load: loadTodosActionCreator,\n};\n\nconst todosReducer = (\n  todosState: Todo[] = [],\n  action: TodosActions,\n): Todo[] => {\n  switch (action.type) {\n    case TodosActionType.LoadTodos:\n      return action.payload;\n\n    default:\n      return todosState;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoIdReducer from '../features/currentTodoId';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodoId: currentTodoIdReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { RootState } from '../app/store';\nimport { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\nimport { CurrentTodoId } from './currentTodoId';\n\nconst todosSelector = (state: RootState): Todo[] => state.todos;\nconst filteredTodosSelector = (state: RootState): Todo[] => {\n  const { todos, filter } = state;\n\n  return todos.filter((todo) => {\n    const isMatchQuery = todo\n      .title\n      .toLowerCase()\n      .includes(filter.query.toLowerCase());\n\n    switch (filter.status) {\n      case 'all':\n        return isMatchQuery;\n\n      case 'active':\n        return isMatchQuery && !todo.completed;\n\n      case 'completed':\n        return isMatchQuery && todo.completed;\n\n      default:\n        return true;\n    }\n  });\n};\n\nconst filterQuerySelector = (state: RootState): string => state.filter.query;\nconst filterSatusSelector = (state: RootState): Status => state.filter.status;\n\nconst currentTodoIdSelector = (state: RootState): CurrentTodoId => (\n  state.currentTodoId\n);\n\nconst todoByIdSelector = (todoId: CurrentTodoId) => {\n  return (state: RootState) => {\n    return state.todos.find(todo => todo.id === todoId) as Todo;\n  };\n};\n\nexport const SELECTORS = {\n  todos: todosSelector,\n  filteredTodos: filteredTodosSelector,\n  query: filterQuerySelector,\n  status: filterSatusSelector,\n  currentTodoId: currentTodoIdSelector,\n  currentTodo: todoByIdSelector,\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { CURRENT_TODO_ID_ACTIONS_CREATOR } from '../../features/currentTodoId';\nimport { SELECTORS } from '../../features/Selectors';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodoId = useAppSelector(SELECTORS.currentTodoId);\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = useAppSelector(SELECTORS.currentTodo(currentTodoId));\n\n  const [user, setUser] = useState<User | null>(null);\n  const [isUserLoading, setIsUserLoading] = useState(false);\n\n  useEffect(() => {\n    setIsUserLoading(true);\n\n    getUser(userId)\n      .then((userFromServer) => setUser(userFromServer))\n      .finally(() => setIsUserLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isUserLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(\n                CURRENT_TODO_ID_ACTIONS_CREATOR.set(null),\n              )}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n              {user && (\n                <a href={`mailto:${user.email}`}>{user.name}</a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { CURRENT_TODO_ID_ACTIONS_CREATOR } from '../../features/currentTodoId';\nimport { SELECTORS } from '../../features/Selectors';\nimport { TodoModal } from '../TodoModal';\n\nexport const TodoList: React.FC = () => {\n  const filteredTodos = useAppSelector(SELECTORS.filteredTodos);\n  const currentTodoId = useAppSelector(SELECTORS.currentTodoId);\n  const dispatch = useAppDispatch();\n\n  return (\n    <>\n      {filteredTodos.length < 1 ? (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      ) : (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {filteredTodos.map(todo => (\n              <tr\n                data-cy=\"todo\"\n                key={todo.id}\n                className={todo.id === currentTodoId ? 'has-background-info-light' : ''}\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\"><i className=\"fas fa-check\" /></span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => dispatch(CURRENT_TODO_ID_ACTIONS_CREATOR.set(todo.id))}\n                  >\n                    <span className=\"icon\">\n                      <i className={`far fa-eye${todo.id === currentTodoId ? '-slash' : ''}`} />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n      {currentTodoId && <TodoModal />}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { FILTER_ACTIONS_CREATOR } from '../../features/filter';\nimport { SELECTORS } from '../../features/Selectors';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const query = useAppSelector(SELECTORS.query);\n  const status = useAppSelector(SELECTORS.status);\n  const dispatch = useAppDispatch();\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => dispatch(\n              FILTER_ACTIONS_CREATOR.setStatus(event.target.value as Status),\n            )}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => dispatch(\n            FILTER_ACTIONS_CREATOR.setQuery(event.target.value),\n          )}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(FILTER_ACTIONS_CREATOR.setQuery(''))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { useAppDispatch } from './app/hooks';\nimport { TODO_ACTIONS_CREATOR } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then((todos) => dispatch(TODO_ACTIONS_CREATOR.load(todos)))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}